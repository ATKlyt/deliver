<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deliver.dao.DriverOrderDao">
  <resultMap id="BaseResultMap" type="cn.deliver.domain.DriverOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="original_id" jdbcType="INTEGER" property="originalId" />
    <result column="destination_id" jdbcType="INTEGER" property="destinationId" />
    <result column="carry" jdbcType="INTEGER" property="carry" />
    <result column="go_off" jdbcType="TIMESTAMP" property="goOff" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap id="DriverOrderMessageResultMap" type="cn.deliver.domain.DriverOrderMessage">
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="auth_id" jdbcType="VARCHAR" property="authId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="car_number" jdbcType="VARCHAR" property="carNumber" />
    <result column="car_picture" jdbcType="VARCHAR" property="carPicture" />
    <association property="driverOrder" javaType="cn.deliver.domain.DriverOrder">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="uid" jdbcType="INTEGER" property="uid" />
      <result column="original_id" jdbcType="INTEGER" property="originalId" />
      <result column="destination_id" jdbcType="INTEGER" property="destinationId" />
      <result column="carry" jdbcType="INTEGER" property="carry" />
      <result column="go_off" jdbcType="DATE" property="goOff" />
      <result column="deadline" jdbcType="DATE" property="deadline" />
      <result column="status" jdbcType="VARCHAR" property="status" />
    </association>
    <association property="area" javaType="cn.deliver.domain.Area">
      <id column="area_id" jdbcType="INTEGER" property="id" />
      <result column="area_uid" jdbcType="INTEGER" property="uid" />
      <result column="area_province" jdbcType="VARCHAR" property="province" />
      <result column="area_city" jdbcType="VARCHAR" property="city" />
      <result column="area_district" jdbcType="VARCHAR" property="district" />
      <result column="area_town" jdbcType="VARCHAR" property="town" />
      <result column="area_village" jdbcType="VARCHAR" property="village" />
      <result column="area_status" jdbcType="VARCHAR" property="status" />
      <result column="area_cid" jdbcType="INTEGER" property="cid" />
    </association>
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, original_id, destination_id, carry, go_off, deadline, status
  </sql>
  <select id="selectByExample" parameterType="cn.deliver.domain.DriverOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from driver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from driver_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from driver_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.deliver.domain.DriverOrderExample">
    delete from driver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.deliver.domain.DriverOrder">
    insert into driver_order (id, uid, original_id, 
      destination_id, carry, go_off, 
      deadline, status)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{originalId,jdbcType=INTEGER}, 
      #{destinationId,jdbcType=INTEGER}, #{carry,jdbcType=INTEGER}, #{goOff,jdbcType=TIMESTAMP}, 
      #{deadline,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.deliver.domain.DriverOrder">
    insert into driver_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="originalId != null">
        original_id,
      </if>
      <if test="destinationId != null">
        destination_id,
      </if>
      <if test="carry != null">
        carry,
      </if>
      <if test="goOff != null">
        go_off,
      </if>
      <if test="deadline != null">
        deadline,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="originalId != null">
        #{originalId,jdbcType=INTEGER},
      </if>
      <if test="destinationId != null">
        #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="carry != null">
        #{carry,jdbcType=INTEGER},
      </if>
      <if test="goOff != null">
        #{goOff,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.deliver.domain.DriverOrderExample" resultType="java.lang.Long">
    select count(*) from driver_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update driver_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.originalId != null">
        original_id = #{record.originalId,jdbcType=INTEGER},
      </if>
      <if test="record.destinationId != null">
        destination_id = #{record.destinationId,jdbcType=INTEGER},
      </if>
      <if test="record.carry != null">
        carry = #{record.carry,jdbcType=INTEGER},
      </if>
      <if test="record.goOff != null">
        go_off = #{record.goOff,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update driver_order
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      original_id = #{record.originalId,jdbcType=INTEGER},
      destination_id = #{record.destinationId,jdbcType=INTEGER},
      carry = #{record.carry,jdbcType=INTEGER},
      go_off = #{record.goOff,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.deliver.domain.DriverOrder">
    update driver_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="originalId != null">
        original_id = #{originalId,jdbcType=INTEGER},
      </if>
      <if test="destinationId != null">
        destination_id = #{destinationId,jdbcType=INTEGER},
      </if>
      <if test="carry != null">
        carry = #{carry,jdbcType=INTEGER},
      </if>
      <if test="goOff != null">
        go_off = #{goOff,jdbcType=TIMESTAMP},
      </if>
      <if test="deadline != null">
        deadline = #{deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.deliver.domain.DriverOrder">
    update driver_order
    set uid = #{uid,jdbcType=INTEGER},
      original_id = #{originalId,jdbcType=INTEGER},
      destination_id = #{destinationId,jdbcType=INTEGER},
      carry = #{carry,jdbcType=INTEGER},
      go_off = #{goOff,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findNearbyDriverOrder" resultType="cn.deliver.domain.DriverOrderMessage">
        SELECT
            a.*, dor.*, u.auth_id,
            u.phone,
            ui.name,
            ui.birthday,
            di.car_number,
            di.car_picture
        FROM
            (
                (
                    (
                        `user` AS u
                        INNER JOIN user_info AS ui ON u.id = ui.uid
                    )
                    INNER JOIN driver_info AS di ON ui.uid = di.uiid
                    AND di.driver_info_order_number &lt; 5
                )
                INNER JOIN driver_order AS dor ON u.id = dor.uid
                AND dor.status = 1
            )
        INNER JOIN area AS a ON u.id = a.uid
        AND a.status = 4
        AND dor.original_id = a.area_id
        AND a.district = #{district,jdbcType=VARCHAR} ;
</select>
</mapper>