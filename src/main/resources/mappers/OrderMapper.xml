<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deliver.dao.OrderDao">
  <resultMap id="BaseResultMap" type="cn.deliver.domain.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="user_order_id" jdbcType="INTEGER" property="userOrderId" />
    <result column="driver_uid" jdbcType="INTEGER" property="driverUid" />
    <result column="surety_id" jdbcType="INTEGER" property="suretyId" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="driver_order_id" jdbcType="INTEGER" property="driverOrderId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, user_order_id, driver_uid, surety_id, no, create_time, update_time, driver_order_id
  </sql>
  <select id="selectByExample" parameterType="cn.deliver.domain.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.deliver.domain.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.deliver.domain.Order">
    insert into order (id, status, user_order_id, 
      driver_uid, surety_id, no, 
      create_time, update_time, driver_order_id
      )
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{userOrderId,jdbcType=INTEGER}, 
      #{driverUid,jdbcType=INTEGER}, #{suretyId,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{driverOrderId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.deliver.domain.Order" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userOrderId != null">
        user_order_id,
      </if>
      <if test="driverUid != null">
        driver_uid,
      </if>
      <if test="suretyId != null">
        surety_id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="driverOrderId != null">
        driver_order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="userOrderId != null">
        #{userOrderId,jdbcType=INTEGER},
      </if>
      <if test="driverUid != null">
        #{driverUid,jdbcType=INTEGER},
      </if>
      <if test="suretyId != null">
        #{suretyId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driverOrderId != null">
        #{driverOrderId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.deliver.domain.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.userOrderId != null">
        user_order_id = #{record.userOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.driverUid != null">
        driver_uid = #{record.driverUid,jdbcType=INTEGER},
      </if>
      <if test="record.suretyId != null">
        surety_id = #{record.suretyId,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.driverOrderId != null">
        driver_order_id = #{record.driverOrderId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      user_order_id = #{record.userOrderId,jdbcType=INTEGER},
      driver_uid = #{record.driverUid,jdbcType=INTEGER},
      surety_id = #{record.suretyId,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      driver_order_id = #{record.driverOrderId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.deliver.domain.Order">
    update order
    <set>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="userOrderId != null">
        user_order_id = #{userOrderId,jdbcType=INTEGER},
      </if>
      <if test="driverUid != null">
        driver_uid = #{driverUid,jdbcType=INTEGER},
      </if>
      <if test="suretyId != null">
        surety_id = #{suretyId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="driverOrderId != null">
        driver_order_id = #{driverOrderId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.deliver.domain.Order">
    update order
    set status = #{status,jdbcType=VARCHAR},
      user_order_id = #{userOrderId,jdbcType=INTEGER},
      driver_uid = #{driverUid,jdbcType=INTEGER},
      surety_id = #{suretyId,jdbcType=INTEGER},
      no = #{no,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      driver_order_id = #{driverOrderId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findWaitOrder" resultMap="BaseResultMap">
        select * from `order` where status in (1);
    </select>

  <update id="updateStatusByIdAndStatus">
    update order set status = #{status,jdbcType=VARCHAR} where id = #{orderId,jdbcType=INTEGER} ;
  </update>
  <delete id="updateUpdateTimeById">
    update order set update_time = #{updateTime,jdbcType=TIMESTAMP} where id = #{orderId,jdbcType=INTEGER}

  </delete>
</mapper>