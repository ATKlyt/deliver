<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.deliver.dao.UserInfoDao">
  <resultMap id="BaseResultMap" type="cn.deliver.domain.UserInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
    <result column="identity_card_picture" jdbcType="VARCHAR" property="identityCardPicture" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, name, gender, birthday, identity_card, identity_card_picture, avatar
  </sql>
  <select id="selectByExample" parameterType="cn.deliver.domain.UserInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.deliver.domain.UserInfoExample">
    delete from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.deliver.domain.UserInfo">
    insert into user_info (id, uid, name, 
      gender, birthday, identity_card, 
      identity_card_picture, avatar)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{identityCard,jdbcType=VARCHAR}, 
      #{identityCardPicture,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.deliver.domain.UserInfo" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="identityCard != null">
        identity_card,
      </if>
      <if test="identityCardPicture != null">
        identity_card_picture,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="identityCard != null">
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="identityCardPicture != null">
        #{identityCardPicture,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.deliver.domain.UserInfoExample" resultType="java.lang.Long">
    select count(*) from user_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.identityCard != null">
        identity_card = #{record.identityCard,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCardPicture != null">
        identity_card_picture = #{record.identityCardPicture,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_info
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      identity_card = #{record.identityCard,jdbcType=VARCHAR},
      identity_card_picture = #{record.identityCardPicture,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.deliver.domain.UserInfo">
    update user_info
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="identityCard != null">
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="identityCardPicture != null">
        identity_card_picture = #{identityCardPicture,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.deliver.domain.UserInfo">
    update user_info
    set uid = #{uid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      identity_card_picture = #{identityCardPicture,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectSurety" parameterType="java.lang.Integer" resultType="cn.deliver.domain.UserInfo">
        SELECT
            user_info.*
        FROM
            user_info
        INNER JOIN area ON area.village = (
            SELECT DISTINCT
                area.village
            FROM
                area
            WHERE
                area.uid =  #{uid,jdbcType=INTEGER}
        )
        AND area.status = 1
        AND area.uid = user_info.uid;
    </select>
  <select id="findByUid" resultMap="BaseResultMap">
        select * from user_info where uid = #{uid,jdbcType=INTEGER}
    </select>

<!--  =================================艺明===================================-->

  <!-- 插入用户信息 -->
  <insert id="insertUserInfo" parameterType="cn.deliver.domain.UserInfo">
        insert into user_info(uid,name,gender,birthday,avatar)
        values(#{uid},#{name},#{gender},#{birthday},#{avatar})
    </insert>


<!--  ==================================俊彬=============================-->


  <!--用户司机注册时需额外填写的共同详细信息(姓名、性别、生日、身份证号码、上传身份证照片等)-->
  <insert id="userInfoRegister" parameterType="cn.deliver.domain.UserInfo" useGeneratedKeys="true" keyProperty="id">
    insert into user_info
    (uid,name,gender,birthday,identity_card,identity_card_picture
    <if test="#{avatar!=null}">
      ,avatar
    </if>
    )
    values
    (#{uid},#{name},#{gender},#{birthday},#{identityCard},#{identityCardPicture}
    <if test="#{avatar!=null}">
      ,#{avatar}
    </if>
    )
  </insert>

  <!--根据用户的userInfoId找到对应user表中的系统发放id-->
  <select id="findUserAuthId" resultType="java.lang.String">
        select auth_id from user where id = (select uid from user_info where id = #{userInfoId})
    </select>
    <select id="findNameByUid" resultType="java.lang.String">
      select name from user_info where uid = #{cid,jdbcType=INTEGER} ;
    </select>

  <select id="getUserInfoById" resultMap="BaseResultMap">
    select id,name,gender,birthday,avatar from user_info where
     uid = #{id}
  </select>
</mapper>